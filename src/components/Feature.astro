---
import { getEntry, getCollection } from 'astro:content';
import YouTubeEmbed from '@/components/YouTubeEmbed.astro';
import { getImage } from "astro:assets";
import { Image } from "astro:assets";
import CTAs from '@/components/CTAs.astro';
const home = await getEntry('homepage', 'index');
// const cta = home.data.cta ? await getEntry('CTAs', home.data.cta) : null;


interface Props {
  content: {
    youtube?: {
      url: string;
      title?: string;
      controls?: boolean;
      mute?: boolean;
      loop?: boolean;
      start?: number;
      end?: number;
      useCustomPlayer?: boolean;
    };
    title: string;
    featureImage?: {
      src: string;
      alt: string;
      height: number;
      width: number;
    };
    CTAs?: {
      title: string;
      description: string;
      ctaUrl: string;
      showFancy: boolean;
      showTransition: boolean;
    };
  };
}

const { content } = Astro.props;


const optimizedImage = await getImage({src: content.featureImage?.src || '/social-card.webp', width: content.featureImage?.width || 800, height: content.featureImage?.height || 600, format: 'webp'});
---
<div id="feature">

  {content.CTAs && (
    <div class="homeCTA"><CTAs 
      title={content.CTAs.title}
      description={content.CTAs.description}
      ctaUrl={content.CTAs.ctaUrl}
      showFancy={content.CTAs.showFancy}
      showTransition={content.CTAs.showTransition}
    /></div>
  )}

  
{
  content.youtube && content.youtube.url ? (
  <div class="featured"><YouTubeEmbed
      url={content.youtube.url}
      title={content.youtube.title}
      controls={content.youtube.controls}
      useCustomPlayer={content.youtube.useCustomPlayer}
      mute={content.youtube.mute}
      loop={content.youtube.loop}
      start={content.youtube.start}
      end={content.youtube.end}
    /></div>
  ) : content.featureImage && content.featureImage.src ? (
    <div class="featured">
      <Image
        src={optimizedImage.src}
        alt={content.featureImage.alt || ""}
        width='800'
        height='600'
        class="max-w-full h-auto border-transparent"
        loading="eager"
        fetchpriority="high"
      />
    </div>
  ) : null
}

</div>